[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "content-creation-assistant"
version = "0.1.0"
description = "AI-powered content creation platform with LangChain and FastAPI"
authors = [
    {name = "Content Creation Team", email = "team@example.com"},
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
keywords = ["ai", "content", "langchain", "fastapi", "vector-search"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-openai>=0.0.5",
    "chromadb>=0.4.18",
    "sentence-transformers>=2.2.2",
    "pydantic>=2.5.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.9.1",
    "flake8>=6.1.0",
    "mypy>=1.6.1",
    "pre-commit>=3.5.0",
]
prod = [
    "numpy>=1.24.3",
    "pandas>=2.0.3",
    "aiofiles>=23.2.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "structlog>=23.2.0",
    "sentry-sdk>=1.38.0",
]
ml = [
    "faiss-cpu>=1.7.4",
    "openai>=1.3.5",
    "tiktoken>=0.5.1",
]

[project.urls]
Homepage = "https://github.com/your-org/content-creation-assistant"
Documentation = "https://github.com/your-org/content-creation-assistant/docs"
Repository = "https://github.com/your-org/content-creation-assistant.git"
"Bug Tracker" = "https://github.com/your-org/content-creation-assistant/issues"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "chromadb.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langchain.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 